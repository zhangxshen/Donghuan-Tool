import pandas as pd
from . import bidtransform
from string import digits
import re

sigstand_db_name = "中国移动动环信号标准化字典表"
alastand_db_name = "中国移动动环告警标准化字典表"
ala_dic_name = '告警标准名'
ala_dic_key = '是否关键信号'
sig_dic_name = '信号标准名'
sig_dic_key = '是否关键信号'
alarmtitle_name = 'AlarmTitleDes'
aic_node = 'NodeId'
aic_name = 'NodeName'
dals_node = 'NodeId'
dev_node = 'NodeId'
dev_name = 'NodeName'
sta_node = 'NodeId'
sta_name = 'NodeName'
empty_name = ''

# 信号量规范性勘误
def sigstand_corr(path_target,path_dict):
    log_flag = 1
    log_flag_list = [
        100,
        200,
        300,
        400,
        500,
        600,
        700,
        800,
        900,
        1000,
        1100,
        1200]
    print("开始读取数据……")
    dal_df = pd.read_excel(path_target, sheet_name='T_AIStatic').drop_duplicates([dals_node])
    aic_df = pd.read_excel(path_target, sheet_name='M_AIC')
    dev_df = pd.read_excel(path_target, sheet_name='M_Device')
    sta_df = pd.read_excel(path_target, sheet_name='M_Station')
    nodeid = dal_df['NodeId'].tolist()
    aic_df = aic_df[aic_df['NodeId'].isin(nodeid)]
    sig_df = pd.read_excel(path_dict, sheet_name=sigstand_db_name)
    aic_df2 = aic_df.drop_duplicates([aic_name])
    aic_df2['NodeId_11'] = aic_df[aic_node].apply(bidtransform.BIDtoNodeID_11)
    aic_df2['NodeId_19'] = aic_df2[aic_node].apply(bidtransform.BIDtoNodeID_19)

    dev_df.rename(
        columns={
            'NodeName': 'Device',
            'NodeId': 'Dev_ID'},
        inplace=True)

    devicetype = dev_df['DeviceType'].tolist()

    sta_df.rename(
        columns={
            'NodeName': 'Station',
            'NodeId': 'Sta_ID'},
        inplace=True)

    aic_df2 = pd.merge(aic_df2, dev_df.loc[:, [
                                                 'Dev_ID', 'Device']],
                       how='left',
                       left_on='NodeId_11',
                       right_on='Dev_ID')
    aic_df2 = pd.merge(aic_df2, sta_df.loc[:, [
                                                  'Sta_ID', 'Station']],
                       how='left',
                       left_on='NodeId_19',
                       right_on='Sta_ID')

    log1 = "去重后信号量数共%d条\n" % len(aic_df2)
    print(log1)
    print("开始进行信号量规范性勘误……")

    sig_stand_df = pd.DataFrame(
        columns=(
            'Station',
            'Device',
            'NodeId',
            'NodeName',
            '信号标准名',
            '是否符合标准名',
        ))

    # sig_stand_df = aic_df2.loc[:, ['Station', 'Device', 'NodeId', 'NodeName']]
    # sig_stand_df['信号标准名'] = None
    # sig_stand_df['是否符合标准名'] = None

    # 通过T_AIStatic表的Node找M_AIC表的Node
    for j in aic_df2.itertuples():
        a_station = getattr(j, 'Station')
        a_device = getattr(j, 'Device')
        a_id = getattr(j, 'NodeId')
        a_name = getattr(j, 'NodeName')
        remove_digits = str.maketrans('', '', digits)
        res = a_name.translate(remove_digits)
        a_res = re.sub('\\(.*?\\)', '', res)
        b = 0
        for k in sig_df.itertuples():
            sig_name = getattr(k, '信号标准名')
            a = sig_name.replace("XX", "")
            if a_res == a:
                save_name = '是'
                sig_stand_df = sig_stand_df.append(
                    pd.DataFrame(
                        {
                            'Station': [a_station],
                            'Device': [a_device],
                            'NodeId': [a_id],
                            'NodeName': [a_name],
                            '信号标准名': [sig_name],
                            '是否符合标准名': [save_name],
                        }))
                b = b + 1
                break
        if b == 0:
            save_name = '否'
            sig_stand_df = sig_stand_df.append(
                pd.DataFrame(
                    {
                        'Station': [a_station],
                        'Device': [a_device],
                        'NodeId': [a_id],
                        'NodeName': [a_name],
                        '信号标准名': [empty_name],
                        '是否符合标准名': [save_name],
                    }))
        log_flag = log_flag + 1
        if log_flag in log_flag_list:
            print("【已勘误信号量数】：", log_flag)
    sig_stand_df.to_excel('信号量规范性勘误.xlsx', index=None)
    print("\n")
    print("信号量规范性勘误完成！数据保存到：信号量规范性勘误.xlsx")
    
    if '否' in sig_stand_df['是否符合标准名'].values:
        print("检测到有不符合标准名的信号量名称，请打开 信号量规范性勘误.xlsx 进行具体核查")
    else:
        print("恭喜！所有信号量名称均符合标准名")
